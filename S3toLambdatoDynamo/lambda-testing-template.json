{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Metadata": {
        "AWS::CloudFormation::Designer": {
            "0f9e907f-d75c-49c8-9dc4-3fff2598ed88": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 60,
                    "y": 90
                },
                "z": 1,
                "embeds": []
            },
            "6e0daae6-01a7-45b9-8581-a8df013aa286": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 180,
                    "y": 90
                },
                "z": 1,
                "embeds": []
            },
            "6ddc3218-3d12-474c-b042-ddae6cc12a0d": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 60,
                    "y": 210
                },
                "z": 1,
                "embeds": [],
                "isassociatedwith": [
                    "6e0daae6-01a7-45b9-8581-a8df013aa286"
                ]
            },
            "2c7490d0-717c-4971-9879-887d5fad64ac": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 180,
                    "y": 210
                },
                "z": 1,
                "embeds": [],
                "dependson": [
                    "6ddc3218-3d12-474c-b042-ddae6cc12a0d"
                ]
            },
            "b6abcece-2310-4ace-8ab4-e2df1013e215": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 300,
                    "y": 90
                },
                "z": 1,
                "embeds": []
            }
        }
    },
    "Parameters": {
        "BucketName": {
            "Description": "Name of the S3 bucket you will deploy the CSV file to",
            "Type": "String",
            "ConstraintDescription": "must be a valid bucket name."
        },
        "FileName": {
            "Description": "Name of the S3 file (including suffix)",
            "Type": "String",
            "ConstraintDescription": "Valid S3 file name."
        },
        "DynamoDBTableName": {
            "Description": "Name of the dynamoDB table you will use",
            "Type": "String",
            "ConstraintDescription": "must be a valid dynamoDB name."
        }
    },
    "Resources": {
        "DynamoDBTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "TableName": {
                    "Ref": "DynamoDBTableName"
                },
                "BillingMode": "PAY_PER_REQUEST",
                "AttributeDefinitions": [
                    {
                        "AttributeName": "StudentID",
                        "AttributeType": "N"
                    },
                    {
                        "AttributeName": "SchoolId",
                        "AttributeType": "N"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "StudentID",
                        "KeyType": "HASH"
                    },
                    {
                        "AttributeName": "SchoolId",
                        "KeyType": "RANGE"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "DynamoDBTableName"
                        }
                    },
                    {
                        "Key": "CostCenter",
                        "Value": "1234"
                    },
                    {
                        "Key": "Project",
                        "Value": "SFProd"
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "b6abcece-2310-4ace-8ab4-e2df1013e215"
                }
            }
        },
        "LambdaRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com",
                                    "s3.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                    "arn:aws:iam::aws:policy/AWSLambdaInvocation-DynamoDB",
                    "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess"
                ],
                "Policies": [
                    {
                        "PolicyName": "policyname",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Resource": "*",
                                    "Action": [
                                        "dynamodb:PutItem",
                                        "dynamodb:BatchWriteItem"
                                    ]
                                }
                            ]
                        }
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "0f9e907f-d75c-49c8-9dc4-3fff2598ed88"
                }
            }
        },
        "CsvToDDBLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Handler": "index.lambda_handler",
                "Role": {
                    "Fn::GetAtt": [
                        "LambdaRole",
                        "Arn"
                    ]
                },
                "Code": {
                    "ZipFile": {
                        "Fn::Join": [
                            "\n",
                            ["import json","import boto3","import os","import csv","import codecs","import sys","","#Environment variables required are 'key' and 'tableName'","","s3 = boto3.resource('s3')","dynamodb = boto3.resource('dynamodb')","","bucket = os.environ['bucket']","key = os.environ['key']","tableName = os.environ['table']","","def lambda_handler(event, context):","#get csv file from bucket","   try:","       obj = s3.Object(bucket, key).get()['Body']       ","   except:","       print(\"S3 Object could not be opened. Check environment variable. \")","   try:","       table = dynamodb.Table(tableName)","   except:","       print(\"Error loading DynamoDB table. Check if table was created correctly and environment variable.\")","","   batch_size = 100","   batch = []","","   #read csv, send data to 'write_to_dynamo' function","   for row in csv.DictReader(codecs.getreader('utf-8')(obj)):","      if len(batch) >= batch_size:","         write_to_dynamo(batch)","         batch.clear()","      batch.append(row)","   if batch:","      write_to_dynamo(batch)","","   return {","      'statusCode': 200,","      'body': json.dumps('Uploaded to DynamoDB Table')","   }","","def write_to_dynamo(rows):","   try:","      table = dynamodb.Table(tableName)","   except:","      print(\"Error loading DynamoDB table. Check if table was created correctly and environment variable.\")","   try:","      with table.batch_writer() as batch:","         for student in rows:","            batch.put_item(","               Item={","                     'StudentID': int(student['StudentID']),","                     'SchoolId': int(student['SchoolId']),","                     'AlternateId': int(student['AlternateId']),","                     'LastRevised': student['LastRevised'],","                     'ShortName': student['ShortName'],","                     'Gender': student['Gender'],","                     'BirthDate': student['BirthDate'],","                     'Ethnicity': student['Ethnicity'],","                     'Race': student['Race'],","                     'ZipCode': student['ZipCode'],","                     'Grade': student['Grade'],","                     'EnrollDate': student['EnrollDate']","               }","            )","   except Exception as e: print(e)"]
                        ]
                    }
                },
                "Runtime": "python3.7",
                "Timeout": 900,
                "MemorySize": 3008,
                "Environment": {
                    "Variables": {
                        "bucket": {
                            "Ref": "BucketName"
                        },
                        "key": {
                            "Ref": "FileName"
                        },
                        "table": {
                            "Ref": "DynamoDBTableName"
                        }
                    }
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "6e0daae6-01a7-45b9-8581-a8df013aa286"
                }
            }
        },
        "S3Bucket": {
            "DependsOn": [
                "CsvToDDBLambdaFunction",
                "BucketPermission"
            ],
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "BucketName": {
                    "Ref": "BucketName"
                },
                "AccessControl": "BucketOwnerFullControl",
                "NotificationConfiguration": {
                    "LambdaConfigurations": [
                        {
                            "Event": "s3:ObjectCreated:*",
                            "Function": {
                                "Fn::GetAtt": [
                                    "CsvToDDBLambdaFunction",
                                    "Arn"
                                ]
                            }
                        }
                    ]
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "2c7490d0-717c-4971-9879-887d5fad64ac"
                }
            }
        },
        "BucketPermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "CsvToDDBLambdaFunction"
                },
                "Principal": "s3.amazonaws.com",
                "SourceAccount": {
                    "Ref": "AWS::AccountId"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "6ddc3218-3d12-474c-b042-ddae6cc12a0d"
                }
            }
        }
    },
    "Outputs": {}
}